diff --git a/src/App.js b/src/App.js
index 04f7f36..0ed3842 100644
--- a/src/App.js
+++ b/src/App.js
@@ -5,37 +5,60 @@ import './App.css';
 import RandomScreen from "./containers/RandomScreen";
 import { getRandomPlayer, getPlayerById } from './utils.js';
 
-// const ENDPOINT = "http://127.0.0.1:3000"; // https://mkrand-api.herokuapp.com/
-const ENDPOINT = "https://mkrand-api.herokuapp.com";
+const ENDPOINT = "http://127.0.0.1:3000"; // https://mkrand-api.herokuapp.com/
+// const ENDPOINT = "https://mkrand-api.herokuapp.com";
 const socket = socketIOClient(ENDPOINT);
 
+const pics = [
+    'https://cdn.pixabay.com/photo/2017/06/19/07/12/water-lily-2418339__480.jpg',
+    'https://cdn.pixabay.com/photo/2017/07/18/18/24/dove-2516641__480.jpg',
+    'https://cdn.pixabay.com/photo/2017/07/14/17/44/frog-2504507__480.jpg',
+    'https://cdn.pixabay.com/photo/2016/09/04/13/08/bread-1643951__480.jpg',
+];
+
 
 function App() {
     const [player1, setPlayer1] = useState('shts');
     const [player2, setPlayer2] = useState('shts');
 
-    const [player1Last, setPlayer1Last] = useState(null);
-    const [player2Last, setPlayer2Last] = useState(null);
+    // const [player1Last, setPlayer1Last] = useState(null);
+    // const [player2Last, setPlayer2Last] = useState(null);
 
-    const [playersChoosed, setPlayersChoosed] = useState(false);
-    const [loading, setLoading] = useState(false);
+    // const [playersChoosed, setPlayersChoosed] = useState(false);
+    // const [loading, setLoading] = useState(false);
 
-    const [response, setResponse] = useState("");
+    // const [response, setResponse] = useState("");
 
-    const [sentRandEvent, setSentRandEvent] = useState(false);
+    // const [sentRandEvent, setSentRandEvent] = useState(false);
     const [isSocketRandHandled, setIsSocketRandHandled] = useState(false);
     const [isRandomRunning, setIsRandomRunning] = useState(false);
     const [intervalVal, setIntervalVal] = useState(null);
+    const [animIntervalVal, setAnimIntervalVal] = useState(null);
     const [randomPlayerFromOther, setRandomPlayerFromOther] = useState(null);
 
-    // console.log('da');
-    // let socket = null;
+    const idxStart = 0;
+
+    const getNextIndex = (idx) => {
+        if (idx >= pics.length - 1) {
+            return 0;
+        }
+        return idx + 1;
+    }
+
 
-        // socket.on('random running', function(msg) {
-    //     console.log(msg, 'msg');
-    // });
+    const [index, setIndex] = useState(idxStart);
+    const [next, setNext] = useState(getNextIndex(idxStart));
+    const [move, setMove] = useState(false);
 
 
+    const setIndexes = (idx) => {
+        setIndex(idx);
+        setNext(getNextIndex(idx));
+    }
+
+    // const startAnimation = () => {
+    //     return
+    // }
 
     useEffect(() => {
         if (!isSocketRandHandled) {
@@ -45,18 +68,32 @@ function App() {
             socket.on('random running', function(msg) {
                 console.log(msg, 'msg running');
                 if (msg) {
+
                     setIsRandomRunning(true);
-                    setIntervalVal(setInterval(() => {
-                        setPlayer1(getRandomPlayer());
-                        setPlayer2(getRandomPlayer());
-                    }, 100));
+                    setAnimIntervalVal(setInterval(() => {
+                        // on
+                        setMove(true);
+
+                        // off
+                        setTimeout(() => {
+                            setMove(false);
+                            setIndexes(getNextIndex(index));
+                        }, 100);
+
+                    }, 150));
+                    // setIntervalVal(setInterval(() => {
+                    //     setPlayer1(getRandomPlayer());
+                    //     setPlayer2(getRandomPlayer());
+                    // }, 100));
                 } else {
                     setIsRandomRunning(false);
+
                 }
             });
             socket.on('random players', function(msg) {
                 console.log(msg, 'random player choosed');
                 setRandomPlayerFromOther(msg);
+
                 // setPlayer1(msg?.player1);
                 // setPlayer2(msg?.player2);
                 // socket.emit('random running');
@@ -66,12 +103,17 @@ function App() {
         }
 
         if (!isRandomRunning) {
-            clearInterval(intervalVal);
+            // clearInterval(intervalVal);
+            clearInterval(animIntervalVal);
             setPlayer1(randomPlayerFromOther?.player1);
             setPlayer2(randomPlayerFromOther?.player2);
+
         }
 
 
+
+
+
         // if (playersChoosed) {
         //
         //     let newPlayer1 = player1;
@@ -97,7 +139,7 @@ function App() {
         //     setLoading(false);
         // }
 
-    }, [playersChoosed, player1, player2, player1Last, player2Last, intervalVal]);
+    }, [player1, player2, intervalVal, animIntervalVal, isRandomRunning]);
 
     return (
         <div className="App">
@@ -106,6 +148,7 @@ function App() {
                 onClick={() => {
                     console.log('clicked;');
                     console.log('socket', socket);
+
                     if (socket){
                         socket.emit('random running', true);
                     }
@@ -115,6 +158,9 @@ function App() {
                     window.scrollTo({ top: 0, behavior: 'smooth' });
 
 
+
+
+
                     // setTimeout(() => {
                     //
                     //     setPlayer1Last(player1);
@@ -137,6 +183,12 @@ function App() {
             <RandomScreen
                 player1={getPlayerById(player1)}
                 player2={getPlayerById(player2)}
+                // currentImage={pics[index]}
+                // nextImage={pics[next]}
+                move={move}
+                index={index}
+                pics={pics}
+                next={next}
             />
         </div>
     );
diff --git a/src/containers/RandomScreen.js b/src/containers/RandomScreen.js
index 608fbf0..6475334 100644
--- a/src/containers/RandomScreen.js
+++ b/src/containers/RandomScreen.js
@@ -4,7 +4,7 @@ import JoystickButton from "../components/Joystick/JoystickButton";
 
 import questionMark from '../assets/qm.png'
 
-const RandomScreen = ({ player1, player2 }) => {
+const RandomScreen = ({ player1, player2, currentImage, nextImage, move, index, pics, next }) => {
 
     return <div className='RandomScreen'>
         <div className='player-1'>
@@ -12,6 +12,18 @@ const RandomScreen = ({ player1, player2 }) => {
             {player1?.name && <div>{player1.name}</div>}
             {player1?.image && <div>
                 <img className='SelectedPlayer' alt={player1?.name} src={player1?.image} />
+                    <div className="mask">
+                        <div className="pic-wrapper">
+                            <div className={`current pic ${move ? 'move' : ''}`}>
+                                {index}
+                                <img src={pics[index]} alt="" />
+                            </div>
+                            <div className={`next pic ${move ? 'move' : ''}`}>
+                                {next}
+                                <img src={pics[next]} alt="" />
+                            </div>
+                        </div>
+                    </div>
             </div>}
             {player1?.kombos && <span>Kombos:</span>}
             {player1?.kombos && player1?.kombos.map( kombo => {
@@ -39,6 +51,18 @@ const RandomScreen = ({ player1, player2 }) => {
             {player2?.name && <div>{player2.name}</div>}
             {player2?.image && <div>
                 <img className='SelectedPlayer' alt={player2?.name} src={player2?.image} />
+                <div className="mask">
+                    <div className="pic-wrapper">
+                        <div className={`current pic ${move ? 'move' : ''}`}>
+                            {index}
+                            <img src={pics[index]} alt="" />
+                        </div>
+                        <div className={`next pic ${move ? 'move' : ''}`}>
+                            {next}
+                            <img src={pics[next]} alt="" />
+                        </div>
+                    </div>
+                </div>
             </div>}
             {player1?.kombos && <span>Kombos:</span>}
             {player2?.kombos && player2?.kombos.map( kombo => {
diff --git a/src/index.css b/src/index.css
index d1576ad..05a18b8 100644
--- a/src/index.css
+++ b/src/index.css
@@ -45,6 +45,7 @@ code {
   color: white;
   padding: 10px 0;
   border-radius: 5px;
+  position: relative;
 }
 .player-1 {
   left: 0;
@@ -152,3 +153,51 @@ code {
   max-width: 20px
 }
 
+
+
+
+.pic {
+  display: inline-block;
+  width: 100%;
+  height: 100%;
+  position: absolute;
+}
+.pic img {
+  width: 100%;
+  height: 100%;
+}
+
+.current {
+  left: 0;
+}
+
+.current.move {
+  left: 0;
+  transition: all 0.1s ease;
+}
+
+.next {
+  left: 200%;
+}
+
+.next.move {
+  left: 0;
+  transition: all 0.1s ease;
+}
+
+.pic-wrapper {
+  background: lightgray;
+  left: 0;
+  position: absolute;
+  width: 100%;
+  height: 100%;
+}
+
+.mask {
+  left: 0;
+  top: 0;
+  overflow: hidden;
+  width: 100%;
+  height: 100%;
+  position: absolute;
+}
